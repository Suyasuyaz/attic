name: Close Parent Issue When All Tasks Done

on:
  issues:
    types: [closed]  # 子Issueが Closed になったときに実行

jobs:
  close-parent:
    runs-on: ubuntu-latest
    steps:
      - name: Check if parent issue should be closed
        uses: actions/github-script@v6
        with:
          script: |
            const issue_number = context.payload.issue.number;
            const repo = context.repo;
            const octokit = github.rest;
            
            console.log(`🔍 Checking for parent issue related to child issue #${issue_number}`);

            // 子Issueの情報を取得
            const childIssue = await octokit.issues.get({
              ...repo,
              issue_number: issue_number
            });

            const parentIssueNumber = childIssue.data.body
              ? (childIssue.data.body.match(/Parent Issue: #(\d+)/) || [])[1]
              : null;

            if (!parentIssueNumber) {
              console.log("⚠️ No parent issue found. Exiting.");
              return;
            }

            console.log(`🔗 Found parent issue: #${parentIssueNumber}`);

            // 親Issueの情報を取得
            const parentIssue = await octokit.issues.get({
              ...repo,
              issue_number: parseInt(parentIssueNumber, 10)
            });

            if (!parentIssue.data.body) {
              console.log("⚠️ Parent issue has no body. Exiting.");
              return;
            }

            console.log("✅ Parent issue body found, checking child tasks...");

            // タスクリスト（子Issueのリスト）を取得
            const matches = parentIssue.data.body.match(/- \[ \] #(\d+)/g) || [];

            if (matches.length === 0) {
              console.log("⚠️ No child tasks found in parent issue. Exiting.");
              return;
            }

            console.log(`📝 Found ${matches.length} child tasks in parent issue.`);

            // すべての子IssueがClosedかチェック
            let allClosed = true;
            for (const match of matches) {
              const childNumber = parseInt(match.match(/#(\d+)/)[1], 10);
              const child = await octokit.issues.get({ ...repo, issue_number: childNumber });
              if (child.data.state !== "closed") {
                allClosed = false;
                console.log(`🚨 Child Issue #${childNumber} is still open.`);
                break;
              }
            }

            if (allClosed) {
              console.log(`🔒 Closing parent issue #${parentIssueNumber} as all child issues are closed.`);
              await octokit.issues.update({
                ...repo,
                issue_number: parseInt(parentIssueNumber, 10),
                state: "closed"
              });
            } else {
              console.log(`ℹ️ Parent issue #${parentIssueNumber} remains open as some child issues are still open.`);
            }
